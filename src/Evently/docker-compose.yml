services:
  evently.web:
    image: ${DOCKER_REGISTRY-}eventlyweb
    container_name: Evently.Web
    build:
      context: .
      dockerfile: ./Web/Evently.Web/Dockerfile
    ports:
      - "3000:80"
  
  evently.api:
#    image: ${DOCKER_REGISTRY-}eventlyapi
    container_name: Evently.Api
    build:
      context: .
      dockerfile: ./Api/Evently.Api/Dockerfile
    ports:
      - "5000:8080"
      - "5001:8081"
    depends_on:
      evently.database:
        condition: service_healthy
      evently.redis:
        condition: service_healthy
      evently.identity:
        condition: service_healthy
  
  evently.database:
    image: postgres:latest
    container_name: Evently.Database
    environment:
      - POSTGRES_DB=evently
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 3s
      retries: 3
    ports:
        - "5432:5432"
    volumes:
      - ./.containers/db:/var/lib/postgresql/data

  evently.redis:
    image: redis:latest
    container_name: Evently.Redis
    restart: always
    healthcheck:
      test: redis-cli --raw incr ping
    ports:
      - "6379:6379"
  
  evently.identity:
    image: quay.io/keycloak/keycloak:latest
    container_name: Evently.Identity
    command: start-dev --import-realm
    environment:
      - KC_HEALTH_ENABLED=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    healthcheck:
      test: [
        "CMD-SHELL",
        'exec 3<>/dev/tcp/localhost/8080; echo -e "GET /health/ready HTTP/1.1\nhost: localhost:8080\n" >&3; timeout --preserve-status 1 cat <&3 | grep -m 1 status | grep -m 1 UP; ERROR=$?; exec 3<&-; exec 3>&-; exit $ERROR'
      ]
    volumes:
      - ./.containers/identity:/opt/keycloak/data
      - ./.files:/opt/keycloak/data/import
    ports:
      - 18080:8080
      - 18081:9000
  
  evently.seq:
    image: datalust/seq:latest
    container_name: Evently.Seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:5341"
      - "8081:80"
